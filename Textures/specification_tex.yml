##########  tex-file format specifications (last updated: 22.09.2014)

  #  The tex-file uses the same filename as the source texture specified in the block data, independent if used as a base texture or overlay texture
  #  Whether the specified source texture is treated as a base texture or overlay texture is defined via base and overlay texture paths in the tex file!
  #  All texture paths used in tex files must be relative to the texture pack and therefore show the folder+subfolders where the texture is located!


  ####  Internal structure of tex files
  #  The "base" and "overlay" parts are both optional, the file is required to use valid YAML syntax!

base:
  path: <(path of base texture)>
  #  If there's no path defined here or it shows the same filename as the tex file, then the source texture specified in the block data is treated as a base texture
  #  If so, then there can be an optional overlay added and the base textures of several blocks can share the same overlay
  pathNormapMap: <(path of normal map file)>
  #  Optional, if missing, then no normal map is applied to the base texture
  method: <connect | horizontal | vertical | grass | repeat | random>
  #  Optional. If missing, then no method is applied to the base texture
  coupling: <id | texture | [paths of coupled textures]>
  #  Optional, if not specified in the file, the default setting should be "id"
  #  id: Only blocks having the same block ID are coupled and will connect, blocks using the same base texture but a different block ID do not connect to them
  #  texture: All blocks using the same base texture are coupled and will connect, independent of block ID
  #  As an alternative, a list of paths to coupled textures can be defined, separated by commas. The texture will connect to them independent of block IDs
  #  The paths only work when the coupled textures use the same connection method, otherwise they give an error
  useMapColor: <biome | water | (path of custom color map in texture pack)>
  #  Optional, if missing, then no color map is used for the base texture
  #  biome: Colors from the biome color map of the loaded planet are multiplied with the colors of the base texture
  #  water: Colors from the water color map of the loaded planet are multiplied with the colors of the base texture
  #  As an alternative, a path to a custom color map inside the texture pack can be defined
  transparency: <true | false>
  #  Optional. If not specified in the file, then "false" is used as the default setting
  #  true: More performance heavy, but allows the base texture to use transparent pixels
  #  false: Only supports fully opaque textures. Pixels with alpha values <1 will be underlayed with magenta color.
  #  Base textures of standard blocks support alpha values ≥ 0.05, pixels with alpha values <0.05 will be ignored and don't show up in-game
  #  Base textures of mesh flora should only contain pixels with alpha = 0 or 1 (either fully transparent or fully opaque), otherwise they'll start to flicker in-game

overlay:
  path: <(path of overlay texture)>
  #  The path of the overlay texture has to be defined if an optional overlay should be used
  #  If a path is defined here and shows the same filename as the tex file, then the source texture specified in the block data is treated as an overlay texture
  #  If so, then there can be an optional base texture added and the overlay textures of several blocks can share the same base texture
  pathNormalMap: <(path of normal map file)>
  #  Optional, if missing, then no normal map is applied to the overlay texture
  method: <connect | horizontal | vertical | grass | repeat | random>
  #  Optional. If missing, then no method is applied to the overlay texture
  coupling: <id | texture | [paths of coupled textures]>
  #  Optional, if not specified in the file, the default setting should be "id"
  #  id: Only blocks having the same block ID are coupled and will connect, blocks using the same overlay texture but a different block ID do not connect to them
  #  texture: All blocks using the same overlay texture are coupled and will connect, independent of block ID
  #  As an alternative, a list of paths to coupled textures can be defined, separated by commas. The texture will connect to them independent of block IDs
  #  The paths only work when the coupled textures use the same connection method, otherwise they give an error
  useMapColor: <biome | water | (path of custom color map in texture pack)>
  #  Optional. If missing, then no color map is used for the overlay texture
  #  biome: Colors from the biome color map of the loaded planet are multiplied with the colors of the overlay texture
  #  water: Colors from the water color map of the loaded planet are multiplied with the colors of the overlay texture
  #  As an alternative, a path to a custom color map inside the texture pack can be defined
  blendMode: <alpha | add | subtract | multiply>
  #  Optional. If not specified in the file, then "alpha" is used as the default setting
  #  alpha: Standard alpha blending is used to overlay the base texture
  #  add/subtract/multiply: The colors of the overlay texture are added/subtracted/multiplied to the base texture




##########  Explanation/possible properties for the texture handling methods:


  ###  Classic 8-way connection method:
  method: connect
  #  Source texture is required to have 12x4 tiles
  #  Template: www.seedofandromeda.com/assets/images/modding/texture/method_connect.png
  innerSeams: <true | false>
  #  Optional. If not specified in the file, then "false" is used as the default setting
  #  true: Textures do not connect around inner corners (see www.seedofandromeda.com/assets/images/modding/texture/method_connect_innerSeams_true.png)
  #  false: Textures connect around inner corners (see www.seedofandromeda.com/assets/images/modding/texture/method_connect_innerSeams_false.png)


  ###  Horizontal 2-way connection method:
  method: horizontal
  #  Source texture is required to have 4x1 tiles
  #  Template: www.seedofandromeda.com/assets/images/modding/texture/method_horizontal.png
  innerSeams: <true | false>
  #  Optional. If not specified in the file, then "false" is used as the default setting
  #  true: Textures do not connect around inner corners (see www.seedofandromeda.com/assets/images/modding/texture/method_horizontal_innerSeams_true.png)
  #  false: Textures connect around inner corners (see www.seedofandromeda.com/assets/images/modding/texture/method_horizontal_innerSeams_false.png)


  ###  Vertical 2-way connection method:
  method: vertical
  #  Source texture is required to have 1x4 tiles
  #  Template: www.seedofandromeda.com/assets/images/modding/texture/method_vertical.png
  reducedMethod: <none | top | bottom>
  #  Optional. If not specified in the file, then "none" is used as the default setting
  #  none: No reduced method applied, all 4 tiles of the tile set are used and connect as usual
  #  top: Only tiles 1 and 2 are used, the others ignored. This reduced method is used when only the top block should show a different texture.
  #  bottom: Only tiles 2 and 3 are used, the others ignored. This reduced method is used when only the bottom block should show a different texture.


  ###  "Better Grass" connection method:
  method: grass
  #  Source texture is required to have 3x3 tiles
  #  Template and explanation: www.seedofandromeda.com/assets/images/modding/texture/method_grass.png
  #  This method actually needs 10 tiles (0-9), but the top texture of the respective block is used as tile 9 (connects to tiles 4-8)
  #  Tile 9 uses the same texture methods and texture features than the top texture, independent of the texture features applied to the 3x3 tile set


  ###  Repeating texture method:
  method: repeat
  #  Uses a larger texture (with a defined number of x and y tiles) which is displayed over an area of x and y blocks
  #  Repeats itself over very large areas
  size: [x,y]
  #  x: Number of tiles in x direction (width of the tile set)
  #  y: Number of tiles in y direction (height of the tile set)
  #  The width and height numbers must be defined, be powers of 2 and must not be higher than 16, otherwise this method gives an error
  symmetry: <none | opposite>
  #  Optional. If not specified in the file, then "none" is used as the default setting
  #  none: All 6 faces are textured independently
  #  opposite: Opposing faces show the same texture, but each pair can potentially have a different texture


  ###  Random textures method:
  method: random
  #  Source texture can contain any number of tiles in a horizontal arrangement
  #  The number of tiles is calculated from the width of the texture divided by the height
  weights: [list of weights]
  #  Optional. If not specified in the file, then "1" is used as the weight number for all tiles
  #  A list of full numbers separated with commas, there should be a weight number for every tile in the source texture, otherwise error
  #  The probability (in %) to find a specific tile at a random position in-game is calculated as following:
  #  Weight number of the tile divided by the sum of all weight numbers
  symmetry: <none | opposite | all>
  #  Optional. If not specified in the file, then "none" is used as the default setting
  #  none: All 6 faces are textured independently
  #  opposite: Opposing faces show the same texture, but each pair can potentially have a different texture
  #  all: All 6 faces of a block use exact the same texture (6-way symmetry)




  ##########  General restrictions and annotations:

  ###  Texture atlasses:
  #  All block texture tiles are automatically stitched to texture atlasses showing 16x16 tiles when starting the game (can be viewed in the texture pack menu)
  #  The maximum number of block texture tiles per texture pack is currently limited to 65536 tiles (256 texture atlasses with 256 tiles each)
  #  Every overlay and normal map tile counts as an extra tile in this case, even when they're combined to one final texture tile in-game

  ###  Mesh flora:
  #  Like normal blocks, all non-block shape flora (mesh flora) supports the use of base and overlay textures as well
  #  The texture handling methods for mesh flora are restricted to random textures and the vertical connection method